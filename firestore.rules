rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isPlatformAdmin() {
      return exists(/databases/$(database)/documents/platformAdmins/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/platformAdmins/$(request.auth.uid)).data.role == 'platform_admin';
    }

    // Allow Firebase Functions to write data (for webhook integration)
    function isServerProcess() {
      return request.auth.token.admin == true;
    }

    // External users collection
    match /externalUsers/{userId} {
      // Users can read and write their own data
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      // Users can create their own document during registration
      allow create: if isAuthenticated() && isOwner(userId);
      
      // Platform admins can read all external users
      allow read: if isAuthenticated() && isPlatformAdmin();
    }

    // Platform admins collection
    match /platformAdmins/{adminId} {
      // Platform admins can read/write their own data
      allow read, write: if isAuthenticated() && isOwner(adminId) && isPlatformAdmin();
      
      // Platform admins can read all platform admins
      allow read: if isAuthenticated() && isPlatformAdmin();
    }

    // Institutions collection
    match /institutions/{institutionId} {
      // Institution admins can read/write their own institution
      allow read, write: if isAuthenticated();
      
      // Platform admins can read/write all institutions
      allow read, write: if isAuthenticated() && isPlatformAdmin();
      
      // Allow querying institutions by name (needed for institutional signup)
      allow list: if isAuthenticated() && isPlatformAdmin();
      
      // Students and teachers can read their institution
      allow read: if isAuthenticated();
      
      // Allow unauthenticated users to read institutions by custom signup token
      // This is needed for institutional signup flow
      // Allow read access to all institutions for signup flow - client will filter by token
      allow read: if true;
      
      // Admins subcollection
      match /admins/{adminId} {
        // Admins can read/write their own data
        allow read, write: if isAuthenticated() && isOwner(adminId);
        
        // Institution admins can read other admins in their institution
        allow read: if isAuthenticated();
        
        // Platform admins can read all admins
        allow read: if isAuthenticated() && isPlatformAdmin();
        
        // Allow creating admin users (needed for institutional signup)
        // Only allow the user to create their own document during registration
        allow create: if isAuthenticated() && isOwner(adminId);
      }
      
      // Departments subcollection
      match /departments/{departmentId} {
        // Institution admins can read/write departments in their institution
        allow read, write: if isAuthenticated();
        
        // Teachers and students can read departments in their institution
        allow read: if isAuthenticated();
        
        // Platform admins can read/write all departments
        allow read, write: if isAuthenticated() && isPlatformAdmin();
        
        // Allow unauthenticated users to read departments by signup token
        // This is needed for institutional signup flow
        allow read: if true;
        
        // Teachers subcollection
        match /teachers/{teacherId} {
          // Teachers can read/write their own data
          allow read, write: if isAuthenticated() && isOwner(teacherId);
          
          // Institution admins can read teachers in their institution
          allow read: if isAuthenticated();
          
          // Teachers can read other teachers in their institution
          allow read: if isAuthenticated();
          
          // Platform admins can read all teachers
          allow read: if isAuthenticated() && isPlatformAdmin();
          
          // Allow creating teacher users (needed for institutional signup)
          // Only allow the user to create their own document during registration
          allow create: if isAuthenticated() && isOwner(teacherId);
        }
        
        // Students subcollection
        match /students/{studentId} {
          // Students can read/write their own data
          allow read, write: if isAuthenticated() && isOwner(studentId);
          
          // Teachers can read students in their department
          allow read: if isAuthenticated();
          
          // Institution admins can read students in their institution
          allow read: if isAuthenticated();
          
          // Students can read other students in their institution
          allow read: if isAuthenticated();
          
          // Platform admins can read all students
          allow read: if isAuthenticated() && isPlatformAdmin();
          
          // Allow creating student users (needed for institutional signup)
          // Only allow the user to create their own document during registration
          allow create: if isAuthenticated() && isOwner(studentId);
        }
      }
    }

    // Interview sessions collection (legacy - for backward compatibility)
    match /interview_sessions/{sessionId} {
      // Students can read/write their own sessions
      allow read, write: if isAuthenticated() && isOwner(resource.data.studentId);
      
      // Teachers can read sessions from students in their institution
      allow read: if isAuthenticated();
      
      // Institution admins can read all sessions from their institution
      allow read: if isAuthenticated();
      
      // Platform admins can read all sessions
      allow read: if isAuthenticated() && isPlatformAdmin();
    }

    // Resumes collection (legacy - for backward compatibility)
    match /resumes/{resumeId} {
      // Users can read/write their own resumes
      allow read, write: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Teachers can read resumes from students in their institution
      allow read: if isAuthenticated();
      
      // Institution admins can read resumes from their institution
      allow read: if isAuthenticated();
    }

    // Interview feedback collection (legacy - for backward compatibility)
    match /interview_feedback/{feedbackId} {
      // Students can read their own feedback
      allow read: if isAuthenticated() && isOwner(resource.data.studentId);
      
      // AI service can write feedback
      allow write: if isAuthenticated() && isPlatformAdmin();
      
      // Teachers can read feedback from students in their institution
      allow read: if isAuthenticated();
      
      // Institution admins can read feedback from their institution
      allow read: if isAuthenticated();
      
      // Firebase Functions can write feedback (for webhook integration)
      allow write: if isServerProcess();
    }

    // Session purchases collection (legacy - for backward compatibility)
    match /session_purchases/{purchaseId} {
      // Users can read/write their own purchases
      allow read, write: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Institution admins can read purchases from their institution
      allow read: if isAuthenticated();
      
      // Platform admins can read all purchases
      allow read: if isAuthenticated() && isPlatformAdmin();
    }

    // Analytics collection (read-only for most users) (legacy - for backward compatibility)
    match /analytics/{doc=**} {
      // Students can read their own analytics
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Teachers can read analytics from their institution
      allow read: if isAuthenticated();
      
      // Institution admins can read analytics from their institution
      allow read: if isAuthenticated();
      
      // Platform admins can read/write all analytics
      allow read, write: if isAuthenticated() && isPlatformAdmin();
    }

    // End of call analysis collection (legacy - for backward compatibility)
    match /end-of-call-analysis/{analysisId} {
      // Allow read for development/testing
      allow read: if true; // TODO: Restrict in production
      
      // Platform admins can read/write all analyses
      allow read, write: if isAuthenticated() && isPlatformAdmin();
      
      // Allow write for authenticated users
      allow write: if isAuthenticated();
      
      // Allow write for anonymous users (empty studentId indicates anonymous)
      allow create: if request.resource.data.studentId == '';
      
      // Allow Firebase Functions to write data (for webhook integration)
      allow create, write: if isServerProcess();
    }
    
    // Interviews collection (legacy - for backward compatibility)
    match /interviews/{interviewId} {
      // Platform admins can read/write all interviews
      allow read, write: if isAuthenticated() && isPlatformAdmin();
      
      // Students can read/write their own interviews
      allow read, write: if isAuthenticated() && isOwner(resource.data.studentId);
      
      // Allow read for development/testing
      allow read: if true; // TODO: Restrict in production
      
      // Allow write for authenticated users
      allow write: if isAuthenticated();
      
      // Allow write for anonymous users (empty studentId indicates anonymous)
      allow create: if request.resource.data.studentId == '';
      
      // Allow Firebase Functions to write data (for webhook integration)
      allow create, write: if isServerProcess();
    }

    // Institution interests collection (legacy - for backward compatibility)
    match /institution_interests/{interestId} {
      // Anyone can create institution interests (for contact form submissions)
      allow create: if true;
      
      // Platform admins can read/write all institution interests
      allow read, write: if isAuthenticated() && isPlatformAdmin();
      
      // Allow unauthenticated users to read institution interests by custom signup token
      // This is needed for institutional signup flow
      allow read: if true;
      
      // Users cannot update or delete institution interests once created
      allow update, delete: if false;
    }

    // System configuration (accessible to ALL users for pricing information)
    match /system_config/{doc=**} {
      // Allow ALL users to read pricing information (this is public data)
      allow read: if true;
      // Only platform admins can write
      allow write: if isAuthenticated() && isPlatformAdmin();
    }

    // Scheduled price changes (platform admins only)
    match /scheduled_price_changes/{changeId} {
      allow read, write, create, update, delete: if isAuthenticated() && isPlatformAdmin();
    }

    // Metadata collection (platform admins only)
    match /metadata/{doc=**} {
      allow read, write: if isAuthenticated() && isPlatformAdmin();
    }

    // Financial analytics collection (platform admins only)
    match /financial_analytics/{doc=**} {
      allow read, write: if isAuthenticated() && isPlatformAdmin();
    }

    // Resources collection (platform admins only for now)
    match /resources/{resourceId} {
      // Platform admins can read/write all resources
      allow read, write, create, update, delete: if isAuthenticated() && isPlatformAdmin();
      
      // Institution admins can read resources
      allow read: if isAuthenticated();
      
      // Students can read resources
      allow read: if isAuthenticated();
    }

    // Messaging collections (platform admins only for now)
    match /messages/{messageId} {
      // Platform admins can read/write all messages
      allow read, write, create, update, delete: if isAuthenticated() && isPlatformAdmin();
      
      // Institution admins can read messages
      allow read: if isAuthenticated();
      
      // Students can read messages
      allow read: if isAuthenticated();
    }
    
    match /message_templates/{templateId} {
      // Platform admins can read/write all templates
      allow read, write, create, update, delete: if isAuthenticated() && isPlatformAdmin();
      
      // Institution admins can read templates
      allow read: if isAuthenticated();
    }
    
    match /broadcast_history/{historyId} {
      // Platform admins can read/write all broadcast history
      allow read, write, create, update, delete: if isAuthenticated() && isPlatformAdmin();
      
      // Institution admins can read broadcast history
      allow read: if isAuthenticated();
    }

    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}